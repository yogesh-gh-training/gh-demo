# .github/workflows/build-test-publish.yml
name: Tests - Reusable

on:
  workflow_call:
# Build and push Docker image
jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    # Login to DockerHub
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
   
    # Test the deployment
    - name: Build Image
      uses: docker/build-push-action@v6
      with:
       context: .
       push: false
       tags: yrj9920/gh-demo:${{ github.sha}}
       file: Dockerfile
       cache-from: type=local,src=/tmp/.buildx-cache
       cache-to: type=local,dest=/tmp/.buildx-cache
       load: true

            # Test the deployment
    - name: Test
      if: success()
      run: |
        sudo apt-get update && sudo apt-get install -y curl
        docker run -d --name gh-demo -p 8000:8000 yrj9920/gh-demo:${{ github.sha}}
        while ! curl -s http://localhost:8000/hello | grep -q "Hello"; do sleep 10;curl -s http://localhost:8000/hello;exit; done

    # Build and push Docker image
    - name: Build Image
      uses: docker/build-push-action@v6
      if: success()
      with:
        context: .
        push: true
        tags: yrj9920/gh-demo:${{ github.sha}}
        file: Dockerfile
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
 
    